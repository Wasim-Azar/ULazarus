// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ULazarusData;

#nullable disable

namespace ULazarusData.Migrations
{
    [DbContext(typeof(ULazarusContext))]
    partial class ULazarusContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "role-admin",
                            Name = "Admin",
                            NormalizedName = "ADMIN"
                        },
                        new
                        {
                            Id = "role-teacher",
                            Name = "Teacher",
                            NormalizedName = "TEACHER"
                        },
                        new
                        {
                            Id = "role-student",
                            Name = "Student",
                            NormalizedName = "STUDENT"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = "admin1",
                            RoleId = "role-admin"
                        },
                        new
                        {
                            UserId = "admin2",
                            RoleId = "role-admin"
                        },
                        new
                        {
                            UserId = "admin3",
                            RoleId = "role-admin"
                        },
                        new
                        {
                            UserId = "Teacher1",
                            RoleId = "role-teacher"
                        },
                        new
                        {
                            UserId = "Teacher2",
                            RoleId = "role-teacher"
                        },
                        new
                        {
                            UserId = "Teacher3",
                            RoleId = "role-teacher"
                        },
                        new
                        {
                            UserId = "Teacher4",
                            RoleId = "role-teacher"
                        },
                        new
                        {
                            UserId = "Teacher5",
                            RoleId = "role-teacher"
                        },
                        new
                        {
                            UserId = "Teacher6",
                            RoleId = "role-teacher"
                        },
                        new
                        {
                            UserId = "Teacher7",
                            RoleId = "role-teacher"
                        },
                        new
                        {
                            UserId = "Teacher8",
                            RoleId = "role-teacher"
                        },
                        new
                        {
                            UserId = "Teacher9",
                            RoleId = "role-teacher"
                        },
                        new
                        {
                            UserId = "Teacher10",
                            RoleId = "role-teacher"
                        },
                        new
                        {
                            UserId = "Student1",
                            RoleId = "role-student"
                        },
                        new
                        {
                            UserId = "Student2",
                            RoleId = "role-student"
                        },
                        new
                        {
                            UserId = "Student3",
                            RoleId = "role-student"
                        },
                        new
                        {
                            UserId = "Student4",
                            RoleId = "role-student"
                        },
                        new
                        {
                            UserId = "Student5",
                            RoleId = "role-student"
                        },
                        new
                        {
                            UserId = "Student6",
                            RoleId = "role-student"
                        },
                        new
                        {
                            UserId = "Student7",
                            RoleId = "role-student"
                        },
                        new
                        {
                            UserId = "Student8",
                            RoleId = "role-student"
                        },
                        new
                        {
                            UserId = "Student9",
                            RoleId = "role-student"
                        },
                        new
                        {
                            UserId = "Student10",
                            RoleId = "role-student"
                        },
                        new
                        {
                            UserId = "Student11",
                            RoleId = "role-student"
                        },
                        new
                        {
                            UserId = "Student12",
                            RoleId = "role-student"
                        },
                        new
                        {
                            UserId = "Student13",
                            RoleId = "role-student"
                        },
                        new
                        {
                            UserId = "Student14",
                            RoleId = "role-student"
                        },
                        new
                        {
                            UserId = "Student15",
                            RoleId = "role-student"
                        },
                        new
                        {
                            UserId = "Student16",
                            RoleId = "role-student"
                        },
                        new
                        {
                            UserId = "Student17",
                            RoleId = "role-student"
                        },
                        new
                        {
                            UserId = "Student18",
                            RoleId = "role-student"
                        },
                        new
                        {
                            UserId = "Student19",
                            RoleId = "role-student"
                        },
                        new
                        {
                            UserId = "Student20",
                            RoleId = "role-student"
                        },
                        new
                        {
                            UserId = "Student21",
                            RoleId = "role-student"
                        },
                        new
                        {
                            UserId = "Student22",
                            RoleId = "role-student"
                        },
                        new
                        {
                            UserId = "Student23",
                            RoleId = "role-student"
                        },
                        new
                        {
                            UserId = "Student24",
                            RoleId = "role-student"
                        },
                        new
                        {
                            UserId = "Student25",
                            RoleId = "role-student"
                        },
                        new
                        {
                            UserId = "Student26",
                            RoleId = "role-student"
                        },
                        new
                        {
                            UserId = "Student27",
                            RoleId = "role-student"
                        },
                        new
                        {
                            UserId = "Student28",
                            RoleId = "role-student"
                        },
                        new
                        {
                            UserId = "Student29",
                            RoleId = "role-student"
                        },
                        new
                        {
                            UserId = "Student30",
                            RoleId = "role-student"
                        },
                        new
                        {
                            UserId = "Student31",
                            RoleId = "role-student"
                        },
                        new
                        {
                            UserId = "Student32",
                            RoleId = "role-student"
                        },
                        new
                        {
                            UserId = "Student33",
                            RoleId = "role-student"
                        },
                        new
                        {
                            UserId = "Student34",
                            RoleId = "role-student"
                        },
                        new
                        {
                            UserId = "Student35",
                            RoleId = "role-student"
                        },
                        new
                        {
                            UserId = "Student36",
                            RoleId = "role-student"
                        },
                        new
                        {
                            UserId = "Student37",
                            RoleId = "role-student"
                        },
                        new
                        {
                            UserId = "Student38",
                            RoleId = "role-student"
                        },
                        new
                        {
                            UserId = "Student39",
                            RoleId = "role-student"
                        },
                        new
                        {
                            UserId = "Student40",
                            RoleId = "role-student"
                        },
                        new
                        {
                            UserId = "Student41",
                            RoleId = "role-student"
                        },
                        new
                        {
                            UserId = "Student42",
                            RoleId = "role-student"
                        },
                        new
                        {
                            UserId = "Student43",
                            RoleId = "role-student"
                        },
                        new
                        {
                            UserId = "Student44",
                            RoleId = "role-student"
                        },
                        new
                        {
                            UserId = "Student45",
                            RoleId = "role-student"
                        },
                        new
                        {
                            UserId = "Student46",
                            RoleId = "role-student"
                        },
                        new
                        {
                            UserId = "Student47",
                            RoleId = "role-student"
                        },
                        new
                        {
                            UserId = "Student48",
                            RoleId = "role-student"
                        },
                        new
                        {
                            UserId = "Student49",
                            RoleId = "role-student"
                        },
                        new
                        {
                            UserId = "Student50",
                            RoleId = "role-student"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("ULazarusData.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "admin1",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "STATIC-CONCURRENCY-71",
                            Email = "wasim@ulazarus.be",
                            EmailConfirmed = true,
                            FirstName = "Wasim",
                            LastName = "Lazarus",
                            LockoutEnabled = false,
                            NormalizedEmail = "WASIM@ULAZARUS.BE",
                            NormalizedUserName = "WASIM@ULAZARUS.BE",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "static-stamp-71",
                            TwoFactorEnabled = false,
                            UserName = "wasim@ulazarus.be"
                        },
                        new
                        {
                            Id = "admin2",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "STATIC-CONCURRENCY-72",
                            Email = "claire@ulazarus.be",
                            EmailConfirmed = true,
                            FirstName = "Claire",
                            LastName = "Delacroix",
                            LockoutEnabled = false,
                            NormalizedEmail = "CLAIRE@ULAZARUS.BE",
                            NormalizedUserName = "CLAIRE@ULAZARUS.BE",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "static-stamp-72",
                            TwoFactorEnabled = false,
                            UserName = "claire@ulazarus.be"
                        },
                        new
                        {
                            Id = "admin3",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "STATIC-CONCURRENCY-73",
                            Email = "jonas@ulazarus.be",
                            EmailConfirmed = true,
                            FirstName = "Jonas",
                            LastName = "Vermeulen",
                            LockoutEnabled = false,
                            NormalizedEmail = "JONAS@ULAZARUS.BE",
                            NormalizedUserName = "JONAS@ULAZARUS.BE",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "static-stamp-73",
                            TwoFactorEnabled = false,
                            UserName = "jonas@ulazarus.be"
                        },
                        new
                        {
                            Id = "Teacher1",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "STATIC-CONCURRENCY-51",
                            Email = "alice.jansen@ulazarus.be",
                            EmailConfirmed = true,
                            FirstName = "Alice",
                            LastName = "Jansen",
                            LockoutEnabled = false,
                            NormalizedEmail = "ALICE.JANSEN@ULAZARUS.BE",
                            NormalizedUserName = "ALICE.JANSEN@ULAZARUS.BE",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "static-stamp-51",
                            TwoFactorEnabled = false,
                            UserName = "alice.jansen@ulazarus.be"
                        },
                        new
                        {
                            Id = "Teacher2",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "STATIC-CONCURRENCY-52",
                            Email = "bart.peeters@ulazarus.be",
                            EmailConfirmed = true,
                            FirstName = "Bart",
                            LastName = "Peeters",
                            LockoutEnabled = false,
                            NormalizedEmail = "BART.PEETERS@ULAZARUS.BE",
                            NormalizedUserName = "BART.PEETERS@ULAZARUS.BE",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "static-stamp-52",
                            TwoFactorEnabled = false,
                            UserName = "bart.peeters@ulazarus.be"
                        },
                        new
                        {
                            Id = "Teacher3",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "STATIC-CONCURRENCY-53",
                            Email = "clara.devos@ulazarus.be",
                            EmailConfirmed = true,
                            FirstName = "Clara",
                            LastName = "De Vos",
                            LockoutEnabled = false,
                            NormalizedEmail = "CLARA.DEVOS@ULAZARUS.BE",
                            NormalizedUserName = "CLARA.DEVOS@ULAZARUS.BE",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "static-stamp-53",
                            TwoFactorEnabled = false,
                            UserName = "clara.devos@ulazarus.be"
                        },
                        new
                        {
                            Id = "Teacher4",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "STATIC-CONCURRENCY-54",
                            Email = "daan.vermeulen@ulazarus.be",
                            EmailConfirmed = true,
                            FirstName = "Daan",
                            LastName = "Vermeulen",
                            LockoutEnabled = false,
                            NormalizedEmail = "DAAN.VERMEULEN@ULAZARUS.BE",
                            NormalizedUserName = "DAAN.VERMEULEN@ULAZARUS.BE",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "static-stamp-54",
                            TwoFactorEnabled = false,
                            UserName = "daan.vermeulen@ulazarus.be"
                        },
                        new
                        {
                            Id = "Teacher5",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "STATIC- CONCURRENCY-55",
                            Email = "eva.maes@ulazarus.be",
                            EmailConfirmed = true,
                            FirstName = "Eva",
                            LastName = "Maes",
                            LockoutEnabled = false,
                            NormalizedEmail = "EVA.MAES@ULAZARUS.BE",
                            NormalizedUserName = "EVA.MAES@ULAZARUS.BE",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "static- stamp-55",
                            TwoFactorEnabled = false,
                            UserName = "eva.maes@ulazarus.be"
                        },
                        new
                        {
                            Id = "Teacher6",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "STATIC-STAMP-56",
                            Email = "frank.vdb@ulazarus.be",
                            EmailConfirmed = true,
                            FirstName = "Frank",
                            LastName = "Vandenberghe",
                            LockoutEnabled = false,
                            NormalizedEmail = "FRANK.VDB@ULAZARUS.BE",
                            NormalizedUserName = "FRANK.VDB@ULAZARUS.BE",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "static-stamp-56",
                            TwoFactorEnabled = false,
                            UserName = "frank.vdb@ulazarus.be"
                        },
                        new
                        {
                            Id = "Teacher7",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "STATIC-STAMP-57",
                            Email = "greet.declerck@ulazarus.be",
                            EmailConfirmed = true,
                            FirstName = "Greet",
                            LastName = "Declerck",
                            LockoutEnabled = false,
                            NormalizedEmail = "GREET.DECLERCK@ULAZARUS.BE",
                            NormalizedUserName = "GREET.DECLERCK@ULAZARUS.BE",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "static-stamp-57",
                            TwoFactorEnabled = false,
                            UserName = "greet.declerck@ulazarus.be"
                        },
                        new
                        {
                            Id = "Teacher8",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "STATIC-STAMP-58",
                            Email = "hans.lenaerts@ulazarus.be",
                            EmailConfirmed = true,
                            FirstName = "Hans",
                            LastName = "Lenaerts",
                            LockoutEnabled = false,
                            NormalizedEmail = "HANS.LENAERTS@ULAZARUS.BE",
                            NormalizedUserName = "HANS.LENAERTS@ULAZARUS.BE",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "static-stamp-58",
                            TwoFactorEnabled = false,
                            UserName = "hans.lenaerts@ulazarus.be"
                        },
                        new
                        {
                            Id = "Teacher9",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "STATIC-STAMP-59",
                            Email = "ilse.vandenheuvel@ulazarus.be",
                            EmailConfirmed = true,
                            FirstName = "Ilse",
                            LastName = "Vandenheuvel",
                            LockoutEnabled = false,
                            NormalizedEmail = "ILSE.VANDENHEUVEL@ULAZARUS.BE",
                            NormalizedUserName = "ILSE.VANDENHEUVEL@ULAZARUS.BE",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "static-stamp-59",
                            TwoFactorEnabled = false,
                            UserName = "ilse.vandenheuvel@ulazarus.be"
                        },
                        new
                        {
                            Id = "Teacher10",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "STATIC-STAMP-60",
                            Email = "jan.desmet@ulazarus.be",
                            EmailConfirmed = true,
                            FirstName = "Jan",
                            LastName = "De Smet",
                            LockoutEnabled = false,
                            NormalizedEmail = "JAN.DESMET@ULAZARUS.BE",
                            NormalizedUserName = "JAN.DESMET@ULAZARUS.BE",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "static-stamp-60",
                            TwoFactorEnabled = false,
                            UserName = "jan.desmet@ulazarus.be"
                        },
                        new
                        {
                            Id = "Student1",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "STATIC-STAMP-1",
                            Email = "lotte.dewilde@ulazarus.be",
                            EmailConfirmed = true,
                            FirstName = "Lotte",
                            LastName = "De Wilde",
                            LockoutEnabled = false,
                            NormalizedEmail = "LOTTE.DEWILDE@ULAZARUS.BE",
                            NormalizedUserName = "LOTTE.DEWILDE@ULAZARUS.BE",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "Static-stamp-1",
                            TwoFactorEnabled = false,
                            UserName = "lotte.dewilde@ulazarus.be"
                        },
                        new
                        {
                            Id = "Student2",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "STATIC-STAMP-2",
                            Email = "milan.goossens@ulazarus.be",
                            EmailConfirmed = true,
                            FirstName = "Milan",
                            LastName = "Goossens",
                            LockoutEnabled = false,
                            NormalizedEmail = "MILAN.GOOSSENS@ULAZARUS.BE",
                            NormalizedUserName = "MILAN.GOOSSENS@ULAZARUS.BE",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "Static-stamp2",
                            TwoFactorEnabled = false,
                            UserName = "milan.goossens@ulazarus.be"
                        },
                        new
                        {
                            Id = "Student3",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "STATIC-STAMP-3",
                            Email = "noa.hermans@ulazarus.be",
                            EmailConfirmed = true,
                            FirstName = "Noa",
                            LastName = "Hermans",
                            LockoutEnabled = false,
                            NormalizedEmail = "NOA.HERMANS@ULAZARUS.BE",
                            NormalizedUserName = "NOA.HERMANS@ULAZARUS.BE",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "Static-stamp-3",
                            TwoFactorEnabled = false,
                            UserName = "noa.hermans@ulazarus.be"
                        },
                        new
                        {
                            Id = "Student4",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "STATIC-STAMP-4",
                            Email = "olivier.willems@ulazarus.be",
                            EmailConfirmed = true,
                            FirstName = "Olivier",
                            LastName = "Willems",
                            LockoutEnabled = false,
                            NormalizedEmail = "OLIVIER.WILLEMS@ULAZARUS.BE",
                            NormalizedUserName = "OLIVIER.WILLEMS@ULAZARUS.BE",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "Static-stamp-4",
                            TwoFactorEnabled = false,
                            UserName = "olivier.willems@ulazarus.be"
                        },
                        new
                        {
                            Id = "Student5",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "STATIC-STAMP-5",
                            Email = "pauline.vandamme@ulazarus.be",
                            EmailConfirmed = true,
                            FirstName = "Pauline",
                            LastName = "Vandamme",
                            LockoutEnabled = false,
                            NormalizedEmail = "PAULINE.VANDAMME@ULAZARUS.BE",
                            NormalizedUserName = "PAULINE.VANDAMME@ULAZARUS.BE",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "Static-stamp-5",
                            TwoFactorEnabled = false,
                            UserName = "pauline.vandamme@ulazarus.be"
                        },
                        new
                        {
                            Id = "Student6",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "STATIC-STAMP-6",
                            Email = "quinten.jacobs@ulazarus.be",
                            EmailConfirmed = true,
                            FirstName = "Quinten",
                            LastName = "Jacobs",
                            LockoutEnabled = false,
                            NormalizedEmail = "QUINTEN.JACOBS@ULAZARUS.BE",
                            NormalizedUserName = "QUINTEN.JACOBS@ULAZARUS.BE",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "Static-stamp-6",
                            TwoFactorEnabled = false,
                            UserName = "quinten.jacobs@ulazarus.be"
                        },
                        new
                        {
                            Id = "Student7",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "STATIC-STAMP-7",
                            Email = "rani.declercq@ulazarus.be",
                            EmailConfirmed = true,
                            FirstName = "Rani",
                            LastName = "Declercq",
                            LockoutEnabled = false,
                            NormalizedEmail = "RANI.DECLERCQ@ULAZARUS.BE",
                            NormalizedUserName = "RANI.DECLERCQ@ULAZARUS.BE",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "Static-stamp-7",
                            TwoFactorEnabled = false,
                            UserName = "rani.declercq@ulazarus.be"
                        },
                        new
                        {
                            Id = "Student8",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "STATIC-STAMP-8",
                            Email = "stijn.vanacker@ulazarus.be",
                            EmailConfirmed = true,
                            FirstName = "Stijn",
                            LastName = "Van Acker",
                            LockoutEnabled = false,
                            NormalizedEmail = "STIJN.VANACKER@ULAZARUS.BE",
                            NormalizedUserName = "STIJN.VANACKER@ULAZARUS.BE",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "Static-stamp-8",
                            TwoFactorEnabled = false,
                            UserName = "stijn.vanacker@ulazarus.be"
                        },
                        new
                        {
                            Id = "Student9",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "STATIC-STAMP-9",
                            Email = "tess.peeters@ulazarus.be",
                            EmailConfirmed = true,
                            FirstName = "Tess",
                            LastName = "Peeters",
                            LockoutEnabled = false,
                            NormalizedEmail = "TESS.PEETERS@ULAZARUS.BE",
                            NormalizedUserName = "TESS.PEETERS@ULAZARUS.BE",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "Static-stamp-9",
                            TwoFactorEnabled = false,
                            UserName = "tess.peeters@ulazarus.be"
                        },
                        new
                        {
                            Id = "Student10",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "STATIC-STAMP-10",
                            Email = "ugo.desmet@ulazarus.be",
                            EmailConfirmed = true,
                            FirstName = "Ugo",
                            LastName = "Desmet",
                            LockoutEnabled = false,
                            NormalizedEmail = "UGO.DESMET@ULAZARUS.BE",
                            NormalizedUserName = "UGO.DESMET@ULAZARUS.BE",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "Static-stamp-10",
                            TwoFactorEnabled = false,
                            UserName = "ugo.desmet@ulazarus.be"
                        },
                        new
                        {
                            Id = "Student11",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "STATIC-STAMP-11",
                            Email = "valerie.vandenbroeck@ulazarus.be",
                            EmailConfirmed = true,
                            FirstName = "Valerie",
                            LastName = "Van den Broeck",
                            LockoutEnabled = false,
                            NormalizedEmail = "VALERIE.VANDENBROECK@ULAZARUS.BE",
                            NormalizedUserName = "VALERIE.VANDENBROECK@ULAZARUS.BE",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "Static-stamp-11",
                            TwoFactorEnabled = false,
                            UserName = "valerie.vandenbroeck@ulazarus.be"
                        },
                        new
                        {
                            Id = "Student12",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "STATIC-STAMP-12",
                            Email = "wout.smet@ulazarus.be",
                            EmailConfirmed = true,
                            FirstName = "Wout",
                            LastName = "Smet",
                            LockoutEnabled = false,
                            NormalizedEmail = "WOUT.SMET@ULAZARUS.BE",
                            NormalizedUserName = "WOUT.SMET@ULAZARUS.BE",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "Static-stamp-12",
                            TwoFactorEnabled = false,
                            UserName = "wout.smet@ulazarus.be"
                        },
                        new
                        {
                            Id = "Student13",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "STATIC-STAMP-13",
                            Email = "xander.vermeiren@ulazarus.be",
                            EmailConfirmed = true,
                            FirstName = "Xander",
                            LastName = "Vermeiren",
                            LockoutEnabled = false,
                            NormalizedEmail = "XANDER.VERMEIREN@ULAZARUS.BE",
                            NormalizedUserName = "XANDER.VERMEIREN@ULAZARUS.BE",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "Static-stamp-13",
                            TwoFactorEnabled = false,
                            UserName = "xander.vermeiren@ulazarus.be"
                        },
                        new
                        {
                            Id = "Student14",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "STATIC-STAMP-14",
                            Email = "yana.desmet@ulazarus.be",
                            EmailConfirmed = true,
                            FirstName = "Yana",
                            LastName = "De Smet",
                            LockoutEnabled = false,
                            NormalizedEmail = "YANA.DESMET@ULAZARUS.BE",
                            NormalizedUserName = "YANA.DESMET@ULAZARUS.BE",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "Static-stamp-14",
                            TwoFactorEnabled = false,
                            UserName = "yana.desmet@ulazarus.be"
                        },
                        new
                        {
                            Id = "Student15",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "STATIC-STAMP-15",
                            Email = "zita.lemmens@ulazarus.be",
                            EmailConfirmed = true,
                            FirstName = "Zita",
                            LastName = "Lemmens",
                            LockoutEnabled = false,
                            NormalizedEmail = "ZITA.LEMMENS@ULAZARUS.BE",
                            NormalizedUserName = "ZITA.LEMMENS@ULAZARUS.BE",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "Static-stamp-15",
                            TwoFactorEnabled = false,
                            UserName = "zita.lemmens@ulazarus.be"
                        },
                        new
                        {
                            Id = "Student16",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "STATIC-STAMP-16",
                            Email = "amber.coppens@ulazarus.be",
                            EmailConfirmed = true,
                            FirstName = "Amber",
                            LastName = "Coppens",
                            LockoutEnabled = false,
                            NormalizedEmail = "AMBER.COPPENS@ULAZARUS.BE",
                            NormalizedUserName = "AMBER.COPPENS@ULAZARUS.BE",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "Static-stamp-16",
                            TwoFactorEnabled = false,
                            UserName = "amber.coppens@ulazarus.be"
                        },
                        new
                        {
                            Id = "Student17",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "STATIC-STAMP-17",
                            Email = "bram.wouters@ulazarus.be",
                            EmailConfirmed = true,
                            FirstName = "Bram",
                            LastName = "Wouters",
                            LockoutEnabled = false,
                            NormalizedEmail = "BRAM.WOUTERS@ULAZARUS.BE",
                            NormalizedUserName = "BRAM.WOUTERS@ULAZARUS.BE",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "Static-stamp-17",
                            TwoFactorEnabled = false,
                            UserName = "bram.wouters@ulazarus.be"
                        },
                        new
                        {
                            Id = "Student18",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "STATIC-STAMP-18",
                            Email = "cato.boonen@ulazarus.be",
                            EmailConfirmed = true,
                            FirstName = "Cato",
                            LastName = "Boonen",
                            LockoutEnabled = false,
                            NormalizedEmail = "CATO.BOONEN@ULAZARUS.BE",
                            NormalizedUserName = "CATO.BOONEN@ULAZARUS.BE",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "Static-stamp-18",
                            TwoFactorEnabled = false,
                            UserName = "cato.boonen@ulazarus.be"
                        },
                        new
                        {
                            Id = "Student19",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "STATIC-STAMP-19",
                            Email = "dorien.depauw@ulazarus.be",
                            EmailConfirmed = true,
                            FirstName = "Dorien",
                            LastName = "De Pauw",
                            LockoutEnabled = false,
                            NormalizedEmail = "DORIEN.DEPAUW@ULAZARUS.BE",
                            NormalizedUserName = "DORIEN.DEPAUW@ULAZARUS.BE",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "Static-stamp-19",
                            TwoFactorEnabled = false,
                            UserName = "dorien.depauw@ulazarus.be"
                        },
                        new
                        {
                            Id = "Student20",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "STATIC-STAMP-20",
                            Email = "elias.vandenberghe@ulazarus.be",
                            EmailConfirmed = true,
                            FirstName = "Elias",
                            LastName = "Vandenberghe",
                            LockoutEnabled = false,
                            NormalizedEmail = "ELIAS.VANDENBERGHE@ULAZARUS.BE",
                            NormalizedUserName = "ELIAS.VANDENBERGHE@ULAZARUS.BE",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "Static-stamp-20",
                            TwoFactorEnabled = false,
                            UserName = "elias.vandenberghe@ulazarus.be"
                        },
                        new
                        {
                            Id = "Student21",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "STATIC-STAMP-21",
                            Email = "fien.verstraeten@ulazarus.be",
                            EmailConfirmed = true,
                            FirstName = "Fien",
                            LastName = "Verstraeten",
                            LockoutEnabled = false,
                            NormalizedEmail = "FIEN.VERSTRAETEN@ULAZARUS.BE",
                            NormalizedUserName = "FIEN.VERSTRAETEN@ULAZARUS.BE",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "Static-stamp-21",
                            TwoFactorEnabled = false,
                            UserName = "fien.verstraeten@ulazarus.be"
                        },
                        new
                        {
                            Id = "Student22",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "STATIC-STAMP-22",
                            Email = "gilles.lenaerts@ulazarus.be",
                            EmailConfirmed = true,
                            FirstName = "Gilles",
                            LastName = "Lenaerts",
                            LockoutEnabled = false,
                            NormalizedEmail = "GILLES.LENAERTS@ULAZARUS.BE",
                            NormalizedUserName = "GILLES.LENAERTS@ULAZARUS.BE",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "Static-stamp-22",
                            TwoFactorEnabled = false,
                            UserName = "gilles.lenaerts@ulazarus.be"
                        },
                        new
                        {
                            Id = "Student23",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "STATIC-STAMP-23",
                            Email = "hanne.vanhecke@ulazarus.be",
                            EmailConfirmed = true,
                            FirstName = "Hanne",
                            LastName = "Van Hecke",
                            LockoutEnabled = false,
                            NormalizedEmail = "HANNE.VANHECKE@ULAZARUS.BE",
                            NormalizedUserName = "HANNE.VANHECKE@ULAZARUS.BE",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "Static-stamp-23",
                            TwoFactorEnabled = false,
                            UserName = "hanne.vanhecke@ulazarus.be"
                        },
                        new
                        {
                            Id = "Student24",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "STATIC-STAMP-24",
                            Email = "ilias.dierckx@ulazarus.be",
                            EmailConfirmed = true,
                            FirstName = "Ilias",
                            LastName = "Dierckx",
                            LockoutEnabled = false,
                            NormalizedEmail = "ILIAS.DIERCKX@ULAZARUS.BE",
                            NormalizedUserName = "ILIAS.DIERCKX@ULAZARUS.BE",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "Static-stamp-24",
                            TwoFactorEnabled = false,
                            UserName = "ilias.dierckx@ulazarus.be"
                        },
                        new
                        {
                            Id = "Student25",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "STATIC-STAMP-25",
                            Email = "joke.vangorp@ulazarus.be",
                            EmailConfirmed = true,
                            FirstName = "Joke",
                            LastName = "Van Gorp",
                            LockoutEnabled = false,
                            NormalizedEmail = "JOKE.VANGORP@ULAZARUS.BE",
                            NormalizedUserName = "JOKE.VANGORP@ULAZARUS.BE",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "Static-stamp-25",
                            TwoFactorEnabled = false,
                            UserName = "joke.vangorp@ulazarus.be"
                        },
                        new
                        {
                            Id = "Student26",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "STATIC-STAMP-26",
                            Email = "kasper.vandenhaute@ulazarus.be",
                            EmailConfirmed = true,
                            FirstName = "Kasper",
                            LastName = "Vandenhaute",
                            LockoutEnabled = false,
                            NormalizedEmail = "KASPER.VANDENHAUTE@ULAZARUS.BE",
                            NormalizedUserName = "KASPER.VANDENHAUTE@ULAZARUS.BE",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "Static-stamp-26",
                            TwoFactorEnabled = false,
                            UserName = "kasper.vandenhaute@ulazarus.be"
                        },
                        new
                        {
                            Id = "Student27",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "STATIC-STAMP-27",
                            Email = "lana.cools@ulazarus.be",
                            EmailConfirmed = true,
                            FirstName = "Lana",
                            LastName = "Cools",
                            LockoutEnabled = false,
                            NormalizedEmail = "LANA.COOLS@ULAZARUS.BE",
                            NormalizedUserName = "LANA.COOLS@ULAZARUS.BE",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "Static-stamp-27",
                            TwoFactorEnabled = false,
                            UserName = "lana.cools@ulazarus.be"
                        },
                        new
                        {
                            Id = "Student28",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "STATIC-STAMP-28",
                            Email = "maarten.deridder@ulazarus.be",
                            EmailConfirmed = true,
                            FirstName = "Maarten",
                            LastName = "De Ridder",
                            LockoutEnabled = false,
                            NormalizedEmail = "MAARTEN.DERIDDER@ULAZARUS.BE",
                            NormalizedUserName = "MAARTEN.DERIDDER@ULAZARUS.BE",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "Static-stamp-28",
                            TwoFactorEnabled = false,
                            UserName = "maarten.deridder@ulazarus.be"
                        },
                        new
                        {
                            Id = "Student29",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "STATIC-STAMP-29",
                            Email = "nina.vandevelde@ulazarus.be",
                            EmailConfirmed = true,
                            FirstName = "Nina",
                            LastName = "Van de Velde",
                            LockoutEnabled = false,
                            NormalizedEmail = "NINA.VANDEVELDE@ULAZARUS.BE",
                            NormalizedUserName = "NINA.VANDEVELDE@ULAZARUS.BE",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "Static-stamp-29",
                            TwoFactorEnabled = false,
                            UserName = "nina.vandevelde@ulazarus.be"
                        },
                        new
                        {
                            Id = "Student30",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "STATIC-STAMP-30",
                            Email = "oona.segers@ulazarus.be",
                            EmailConfirmed = true,
                            FirstName = "Oona",
                            LastName = "Segers",
                            LockoutEnabled = false,
                            NormalizedEmail = "OONA.SEGERS@ULAZARUS.BE",
                            NormalizedUserName = "OONA.SEGERS@ULAZARUS.BE",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "Static-stamp-30",
                            TwoFactorEnabled = false,
                            UserName = "oona.segers@ulazarus.be"
                        },
                        new
                        {
                            Id = "Student31",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "STATIC-STAMP-31",
                            Email = "pieter.diels@ulazarus.be",
                            EmailConfirmed = true,
                            FirstName = "Pieter",
                            LastName = "Diels",
                            LockoutEnabled = false,
                            NormalizedEmail = "PIETER.DIELS@ULAZARUS.BE",
                            NormalizedUserName = "PIETER.DIELS@ULAZARUS.BE",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "Static-stamp-31",
                            TwoFactorEnabled = false,
                            UserName = "pieter.diels@ulazarus.be"
                        },
                        new
                        {
                            Id = "Student32",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "STATIC-STAMP-32",
                            Email = "quincy.helsen@ulazarus.be",
                            EmailConfirmed = true,
                            FirstName = "Quincy",
                            LastName = "Helsen",
                            LockoutEnabled = false,
                            NormalizedEmail = "QUINCY.HELSEN@ULAZARUS.BE",
                            NormalizedUserName = "QUINCY.HELSEN@ULAZARUS.BE",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "Static-stamp-32",
                            TwoFactorEnabled = false,
                            UserName = "quincy.helsen@ulazarus.be"
                        },
                        new
                        {
                            Id = "Student33",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "STATIC-STAMP-33",
                            Email = "roos.depooter@ulazarus.be",
                            EmailConfirmed = true,
                            FirstName = "Roos",
                            LastName = "De Pooter",
                            LockoutEnabled = false,
                            NormalizedEmail = "ROOS.DEPOOTER@ULAZARUS.BE",
                            NormalizedUserName = "ROOS.DEPOOTER@ULAZARUS.BE",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "Static-stamp-33",
                            TwoFactorEnabled = false,
                            UserName = "roos.depooter@ulazarus.be"
                        },
                        new
                        {
                            Id = "Student34",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "STATIC-STAMP-34",
                            Email = "simon.d'hoore@ulazarus.be",
                            EmailConfirmed = true,
                            FirstName = "Simon",
                            LastName = "D'Hoore",
                            LockoutEnabled = false,
                            NormalizedEmail = "SIMON.D'HOORE@ULAZARUS.BE",
                            NormalizedUserName = "SIMON.D'HOORE@ULAZARUS.BE",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "Static-stamp-34",
                            TwoFactorEnabled = false,
                            UserName = "simon.d'hoore@ulazarus.be"
                        },
                        new
                        {
                            Id = "Student35",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "STATIC-STAMP-35",
                            Email = "tine.vermassen@ulazarus.be",
                            EmailConfirmed = true,
                            FirstName = "Tine",
                            LastName = "Vermassen",
                            LockoutEnabled = false,
                            NormalizedEmail = "TINE.VERMASSEN@ULAZARUS.BE",
                            NormalizedUserName = "TINE.VERMASSEN@ULAZARUS.BE",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "Static-stamp-35",
                            TwoFactorEnabled = false,
                            UserName = "tine.vermassen@ulazarus.be"
                        },
                        new
                        {
                            Id = "Student36",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "STATIC-STAMP-36",
                            Email = "urs.dekoninck@ulazarus.be",
                            EmailConfirmed = true,
                            FirstName = "Urs",
                            LastName = "De Koninck",
                            LockoutEnabled = false,
                            NormalizedEmail = "URS.DEKONINCK@ULAZARUS.BE",
                            NormalizedUserName = "URS.DEKONINCK@ULAZARUS.BE",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "Static-stamp-36",
                            TwoFactorEnabled = false,
                            UserName = "urs.dekoninck@ulazarus.be"
                        },
                        new
                        {
                            Id = "Student37",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "STATIC-STAMP-37",
                            Email = "veerle.dewaele@ulazarus.be",
                            EmailConfirmed = true,
                            FirstName = "Veerle",
                            LastName = "Dewaele",
                            LockoutEnabled = false,
                            NormalizedEmail = "VEERLE.DEWAELE@ULAZARUS.BE",
                            NormalizedUserName = "VEERLE.DEWAELE@ULAZARUS.BE",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "Static-stamp-37",
                            TwoFactorEnabled = false,
                            UserName = "veerle.dewaele@ulazarus.be"
                        },
                        new
                        {
                            Id = "Student38",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "STATIC-STAMP-38",
                            Email = "ward.claes@ulazarus.be",
                            EmailConfirmed = true,
                            FirstName = "Ward",
                            LastName = "Claes",
                            LockoutEnabled = false,
                            NormalizedEmail = "WARD.CLAES@ULAZARUS.BE",
                            NormalizedUserName = "WARD.CLAES@ULAZARUS.BE",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "Static-stamp-38",
                            TwoFactorEnabled = false,
                            UserName = "ward.claes@ulazarus.be"
                        },
                        new
                        {
                            Id = "Student39",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "STATIC-STAMP-39",
                            Email = "xenia.vanderhaegen@ulazarus.be",
                            EmailConfirmed = true,
                            FirstName = "Xenia",
                            LastName = "Vanderhaegen",
                            LockoutEnabled = false,
                            NormalizedEmail = "XENIA.VANDERHAEGEN@ULAZARUS.BE",
                            NormalizedUserName = "XENIA.VANDERHAEGEN@ULAZARUS.BE",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "Static-stamp-39",
                            TwoFactorEnabled = false,
                            UserName = "xenia.vanderhaegen@ulazarus.be"
                        },
                        new
                        {
                            Id = "Student40",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "STATIC-STAMP-40",
                            Email = "yorben.dewinter@ulazarus.be",
                            EmailConfirmed = true,
                            FirstName = "Yorben",
                            LastName = "De Winter",
                            LockoutEnabled = false,
                            NormalizedEmail = "YORBEN.DEWINTER@ULAZARUS.BE",
                            NormalizedUserName = "YORBEN.DEWINTER@ULAZARUS.BE",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "Static-stamp-40",
                            TwoFactorEnabled = false,
                            UserName = "yorben.dewinter@ulazarus.be"
                        },
                        new
                        {
                            Id = "Student41",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "STATIC-STAMP-41",
                            Email = "zoë.meeus@ulazarus.be",
                            EmailConfirmed = true,
                            FirstName = "Zoë",
                            LastName = "Meeus",
                            LockoutEnabled = false,
                            NormalizedEmail = "ZOË.MEEUS@ULAZARUS.BE",
                            NormalizedUserName = "ZOË.MEEUS@ULAZARUS.BE",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "Static-stamp-1",
                            TwoFactorEnabled = false,
                            UserName = "zoë.meeus@ulazarus.be"
                        },
                        new
                        {
                            Id = "Student42",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "STATIC-STAMP-42",
                            Email = "annelies.demuynck@ulazarus.be",
                            EmailConfirmed = true,
                            FirstName = "Annelies",
                            LastName = "Demuynck",
                            LockoutEnabled = false,
                            NormalizedEmail = "ANNELIES.DEMUYNCK@ULAZARUS.BE",
                            NormalizedUserName = "ANNELIES.DEMUYNCK@ULAZARUS.BE",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "Static-stamp-42",
                            TwoFactorEnabled = false,
                            UserName = "annelies.demuynck@ulazarus.be"
                        },
                        new
                        {
                            Id = "Student43",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "STATIC-STAMP-43",
                            Email = "bert.vrancken@ulazarus.be",
                            EmailConfirmed = true,
                            FirstName = "Bert",
                            LastName = "Vrancken",
                            LockoutEnabled = false,
                            NormalizedEmail = "BERT.VRANCKEN@ULAZARUS.BE",
                            NormalizedUserName = "BERT.VRANCKEN@ULAZARUS.BE",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "Static-stamp-43",
                            TwoFactorEnabled = false,
                            UserName = "bert.vrancken@ulazarus.be"
                        },
                        new
                        {
                            Id = "Student44",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "STATIC-STAMP-44",
                            Email = "charlotte.moons@ulazarus.be",
                            EmailConfirmed = true,
                            FirstName = "Charlotte",
                            LastName = "Moons",
                            LockoutEnabled = false,
                            NormalizedEmail = "CHARLOTTE.MOONS@ULAZARUS.BE",
                            NormalizedUserName = "CHARLOTTE.MOONS@ULAZARUS.BE",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "Static-stamp-44",
                            TwoFactorEnabled = false,
                            UserName = "charlotte.moons@ulazarus.be"
                        },
                        new
                        {
                            Id = "Student45",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "STATIC-STAMP-45",
                            Email = "dylan.spillebeen@ulazarus.be",
                            EmailConfirmed = true,
                            FirstName = "Dylan",
                            LastName = "Spillebeen",
                            LockoutEnabled = false,
                            NormalizedEmail = "DYLAN.SPILLEBEEN@ULAZARUS.BE",
                            NormalizedUserName = "DYLAN.SPILLEBEEN@ULAZARUS.BE",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "Static-stamp-45",
                            TwoFactorEnabled = false,
                            UserName = "dylan.spillebeen@ulazarus.be"
                        },
                        new
                        {
                            Id = "Student46",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "STATIC-STAMP-46",
                            Email = "eline.vermeersch@ulazarus.be",
                            EmailConfirmed = true,
                            FirstName = "Eline",
                            LastName = "Vermeersch",
                            LockoutEnabled = false,
                            NormalizedEmail = "ELINE.VERMEERSCH@ULAZARUS.BE",
                            NormalizedUserName = "ELINE.VERMEERSCH@ULAZARUS.BE",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "Static-stamp-46",
                            TwoFactorEnabled = false,
                            UserName = "eline.vermeersch@ulazarus.be"
                        },
                        new
                        {
                            Id = "Student47",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "STATIC-STAMP-47",
                            Email = "frederik.vanlooy@ulazarus.be",
                            EmailConfirmed = true,
                            FirstName = "Frederik",
                            LastName = "Van Looy",
                            LockoutEnabled = false,
                            NormalizedEmail = "FREDERIK.VANLOOY@ULAZARUS.BE",
                            NormalizedUserName = "FREDERIK.VANLOOY@ULAZARUS.BE",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "Static-stamp-47",
                            TwoFactorEnabled = false,
                            UserName = "frederik.vanlooy@ulazarus.be"
                        },
                        new
                        {
                            Id = "Student48",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "STATIC-STAMP-48",
                            Email = "gwen.vandamme@ulazarus.be",
                            EmailConfirmed = true,
                            FirstName = "Gwen",
                            LastName = "Van Damme",
                            LockoutEnabled = false,
                            NormalizedEmail = "GWEN.VANDAMME@ULAZARUS.BE",
                            NormalizedUserName = "GWEN.VANDAMME@ULAZARUS.BE",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "Static-stamp-48",
                            TwoFactorEnabled = false,
                            UserName = "gwen.vandamme@ulazarus.be"
                        },
                        new
                        {
                            Id = "Student49",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "STATIC-STAMP-49",
                            Email = "hugo.dejonge@ulazarus.be",
                            EmailConfirmed = true,
                            FirstName = "Hugo",
                            LastName = "De Jonge",
                            LockoutEnabled = false,
                            NormalizedEmail = "HUGO.DEJONGE@ULAZARUS.BE",
                            NormalizedUserName = "HUGO.DEJONGE@ULAZARUS.BE",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "Static-stamp-49",
                            TwoFactorEnabled = false,
                            UserName = "hugo.dejonge@ulazarus.be"
                        },
                        new
                        {
                            Id = "Student50",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "STATIC-STAMP-50",
                            Email = "isa.vandewalle@ulazarus.be",
                            EmailConfirmed = true,
                            FirstName = "Isa",
                            LastName = "Vandewalle",
                            LockoutEnabled = false,
                            NormalizedEmail = "ISA.VANDEWALLE@ULAZARUS.BE",
                            NormalizedUserName = "ISA.VANDEWALLE@ULAZARUS.BE",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "Static-stamp-50",
                            TwoFactorEnabled = false,
                            UserName = "isa.vandewalle@ulazarus.be"
                        });
                });

            modelBuilder.Entity("ULazarusData.Models.Course", b =>
                {
                    b.Property<int>("CourseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CourseId"));

                    b.Property<int?>("FacultyId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SectorId")
                        .HasColumnType("int");

                    b.Property<int?>("TeacherId")
                        .HasColumnType("int");

                    b.HasKey("CourseId");

                    b.HasIndex("FacultyId");

                    b.HasIndex("SectorId");

                    b.HasIndex("TeacherId");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            CourseId = 1,
                            FacultyId = 1,
                            Name = "Programming C#",
                            SectorId = 1,
                            TeacherId = 1
                        },
                        new
                        {
                            CourseId = 2,
                            FacultyId = 2,
                            Name = "Medical Ethics",
                            SectorId = 2,
                            TeacherId = 2
                        },
                        new
                        {
                            CourseId = 3,
                            FacultyId = 3,
                            Name = "Financial Accounting",
                            SectorId = 3,
                            TeacherId = 3
                        },
                        new
                        {
                            CourseId = 4,
                            FacultyId = 4,
                            Name = "European Literature",
                            SectorId = 4,
                            TeacherId = 4
                        });
                });

            modelBuilder.Entity("ULazarusData.Models.CourseResult", b =>
                {
                    b.Property<int>("CourseResultId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CourseResultId"));

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<decimal>("Score")
                        .HasColumnType("decimal(5,2)");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.HasKey("CourseResultId");

                    b.HasIndex("CourseId");

                    b.HasIndex("StudentId");

                    b.ToTable("CourseResults");

                    b.HasData(
                        new
                        {
                            CourseResultId = 1,
                            CourseId = 1,
                            Score = 85.50m,
                            StudentId = 1
                        },
                        new
                        {
                            CourseResultId = 2,
                            CourseId = 2,
                            Score = 78.25m,
                            StudentId = 2
                        },
                        new
                        {
                            CourseResultId = 3,
                            CourseId = 3,
                            Score = 92.00m,
                            StudentId = 3
                        },
                        new
                        {
                            CourseResultId = 4,
                            CourseId = 4,
                            Score = 88.75m,
                            StudentId = 4
                        },
                        new
                        {
                            CourseResultId = 5,
                            CourseId = 1,
                            Score = 81.00m,
                            StudentId = 5
                        },
                        new
                        {
                            CourseResultId = 6,
                            CourseId = 2,
                            Score = 90.50m,
                            StudentId = 6
                        },
                        new
                        {
                            CourseResultId = 7,
                            CourseId = 3,
                            Score = 76.75m,
                            StudentId = 7
                        },
                        new
                        {
                            CourseResultId = 8,
                            CourseId = 4,
                            Score = 89.00m,
                            StudentId = 8
                        });
                });

            modelBuilder.Entity("ULazarusData.Models.Faculty", b =>
                {
                    b.Property<int>("FacultyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FacultyId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FacultyId");

                    b.ToTable("Faculties");

                    b.HasData(
                        new
                        {
                            FacultyId = 1,
                            Name = "Engineering"
                        },
                        new
                        {
                            FacultyId = 2,
                            Name = "Health Sciences"
                        },
                        new
                        {
                            FacultyId = 3,
                            Name = "Economics"
                        },
                        new
                        {
                            FacultyId = 4,
                            Name = "Arts and Humanities"
                        });
                });

            modelBuilder.Entity("ULazarusData.Models.Schedule", b =>
                {
                    b.Property<int>("ScheduleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ScheduleId"));

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ScheduleId");

                    b.HasIndex("CourseId");

                    b.ToTable("Schedules");

                    b.HasData(
                        new
                        {
                            ScheduleId = 1,
                            CourseId = 1,
                            Date = new DateTime(2025, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Location = "Campus A - Room 101",
                            Name = "Morning"
                        },
                        new
                        {
                            ScheduleId = 2,
                            CourseId = 2,
                            Date = new DateTime(2025, 9, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Location = "Campus B - Room 202",
                            Name = "Afternoon"
                        },
                        new
                        {
                            ScheduleId = 3,
                            CourseId = 3,
                            Date = new DateTime(2025, 9, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Location = "Campus C - Lab 1",
                            Name = "Evening"
                        },
                        new
                        {
                            ScheduleId = 4,
                            CourseId = 4,
                            Date = new DateTime(2025, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Location = "Campus D - Room 404",
                            Name = "Weekend"
                        });
                });

            modelBuilder.Entity("ULazarusData.Models.Sector", b =>
                {
                    b.Property<int>("SectorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SectorId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SectorId");

                    b.ToTable("Sectors");

                    b.HasData(
                        new
                        {
                            SectorId = 1,
                            Name = "Software Development"
                        },
                        new
                        {
                            SectorId = 2,
                            Name = "Nursing"
                        },
                        new
                        {
                            SectorId = 3,
                            Name = "Finance"
                        },
                        new
                        {
                            SectorId = 4,
                            Name = "Literature"
                        });
                });

            modelBuilder.Entity("ULazarusData.Models.Student", b =>
                {
                    b.Property<int>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StudentId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FacultyId")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ScheduleId")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("StudentId");

                    b.HasIndex("FacultyId");

                    b.HasIndex("ScheduleId");

                    b.HasIndex("UserId");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            StudentId = 1,
                            Email = "lotte.dewilde@ulazarus.be",
                            FacultyId = 1,
                            FirstName = "Lotte",
                            LastName = "De Wilde",
                            ScheduleId = 1,
                            UserId = "Student1"
                        },
                        new
                        {
                            StudentId = 2,
                            Email = "milan.goossens@ulazarus.be",
                            FacultyId = 2,
                            FirstName = "Milan",
                            LastName = "Goossens",
                            ScheduleId = 2,
                            UserId = "Student2"
                        },
                        new
                        {
                            StudentId = 3,
                            Email = "noa.hermans@ulazarus.be",
                            FacultyId = 3,
                            FirstName = "Noa",
                            LastName = "Hermans",
                            ScheduleId = 3,
                            UserId = "Student3"
                        },
                        new
                        {
                            StudentId = 4,
                            Email = "olivier.willems@ulazarus.be",
                            FacultyId = 1,
                            FirstName = "Olivier",
                            LastName = "Willems",
                            ScheduleId = 3,
                            UserId = "Student4"
                        },
                        new
                        {
                            StudentId = 5,
                            Email = "pauline.vandamme@ulazarus.be",
                            FacultyId = 2,
                            FirstName = "Pauline",
                            LastName = "Vandamme",
                            ScheduleId = 2,
                            UserId = "Student5"
                        },
                        new
                        {
                            StudentId = 6,
                            Email = "quinten.jacobs@ulazarus.be",
                            FacultyId = 3,
                            FirstName = "Quinten",
                            LastName = "Jacobs",
                            ScheduleId = 1,
                            UserId = "Student6"
                        },
                        new
                        {
                            StudentId = 7,
                            Email = "rani.declercq@ulazarus.be",
                            FacultyId = 1,
                            FirstName = "Rani",
                            LastName = "Declercq",
                            ScheduleId = 2,
                            UserId = "Student7"
                        },
                        new
                        {
                            StudentId = 8,
                            Email = "stijn.vanacker@ulazarus.be",
                            FacultyId = 2,
                            FirstName = "Stijn",
                            LastName = "Van Acker",
                            ScheduleId = 3,
                            UserId = "Student8"
                        },
                        new
                        {
                            StudentId = 9,
                            Email = "tess.peeters@ulazarus.be",
                            FacultyId = 3,
                            FirstName = "Tess",
                            LastName = "Peeters",
                            ScheduleId = 1,
                            UserId = "Student9"
                        },
                        new
                        {
                            StudentId = 10,
                            Email = "ugo.desmet@ulazarus.be",
                            FacultyId = 1,
                            FirstName = "Ugo",
                            LastName = "Desmet",
                            ScheduleId = 2,
                            UserId = "Student10"
                        },
                        new
                        {
                            StudentId = 11,
                            Email = "valerie.vandenbroeck@ulazarus.be",
                            FacultyId = 2,
                            FirstName = "Valerie",
                            LastName = "Van den Broeck",
                            ScheduleId = 1,
                            UserId = "Student11"
                        },
                        new
                        {
                            StudentId = 12,
                            Email = "wout.smet@ulazarus.be",
                            FacultyId = 3,
                            FirstName = "Wout",
                            LastName = "Smet",
                            ScheduleId = 2,
                            UserId = "Student12"
                        },
                        new
                        {
                            StudentId = 13,
                            Email = "xander.vermeiren@ulazarus.be",
                            FacultyId = 1,
                            FirstName = "Xander",
                            LastName = "Vermeiren",
                            ScheduleId = 3,
                            UserId = "Student13"
                        },
                        new
                        {
                            StudentId = 14,
                            Email = "yana.desmet@ulazarus.be",
                            FacultyId = 2,
                            FirstName = "Yana",
                            LastName = "De Smet",
                            ScheduleId = 3,
                            UserId = "Student14"
                        },
                        new
                        {
                            StudentId = 15,
                            Email = "zita.lemmens@ulazarus.be",
                            FacultyId = 3,
                            FirstName = "Zita",
                            LastName = "Lemmens",
                            ScheduleId = 1,
                            UserId = "Student15"
                        },
                        new
                        {
                            StudentId = 16,
                            Email = "amber.coppens@ulazarus.be",
                            FacultyId = 1,
                            FirstName = "Amber",
                            LastName = "Coppens",
                            ScheduleId = 1,
                            UserId = "Student16"
                        },
                        new
                        {
                            StudentId = 17,
                            Email = "bram.wouters@ulazarus.be",
                            FacultyId = 2,
                            FirstName = "Bram",
                            LastName = "Wouters",
                            ScheduleId = 2,
                            UserId = "Student17"
                        },
                        new
                        {
                            StudentId = 18,
                            Email = "cato.boonen@ulazarus.be",
                            FacultyId = 3,
                            FirstName = "Cato",
                            LastName = "Boonen",
                            ScheduleId = 3,
                            UserId = "Student18"
                        },
                        new
                        {
                            StudentId = 19,
                            Email = "dorien.depauw@ulazarus.be",
                            FacultyId = 1,
                            FirstName = "Dorien",
                            LastName = "De Pauw",
                            ScheduleId = 2,
                            UserId = "Student19"
                        },
                        new
                        {
                            StudentId = 20,
                            Email = "elias.vandenberghe@ulazarus.be",
                            FacultyId = 2,
                            FirstName = "Elias",
                            LastName = "Vandenberghe",
                            ScheduleId = 3,
                            UserId = "Student20"
                        },
                        new
                        {
                            StudentId = 21,
                            Email = "fien.verstraeten@ulazarus.be",
                            FacultyId = 3,
                            FirstName = "Fien",
                            LastName = "Verstraeten",
                            ScheduleId = 1,
                            UserId = "Student21"
                        },
                        new
                        {
                            StudentId = 22,
                            Email = "gilles.lenaerts@ulazarus.be",
                            FacultyId = 1,
                            FirstName = "Gilles",
                            LastName = "Lenaerts",
                            ScheduleId = 2,
                            UserId = "Student22"
                        },
                        new
                        {
                            StudentId = 23,
                            Email = "hanne.vanhecke@ulazarus.be",
                            FacultyId = 2,
                            FirstName = "Hanne",
                            LastName = "Van Hecke",
                            ScheduleId = 3,
                            UserId = "Student23"
                        },
                        new
                        {
                            StudentId = 24,
                            Email = "ilias.dierckx@ulazarus.be",
                            FacultyId = 3,
                            FirstName = "Ilias",
                            LastName = "Dierckx",
                            ScheduleId = 1,
                            UserId = "Student24"
                        },
                        new
                        {
                            StudentId = 25,
                            Email = "joke.vangorp@ulazarus.be",
                            FacultyId = 1,
                            FirstName = "Joke",
                            LastName = "Van Gorp",
                            ScheduleId = 1,
                            UserId = "Student25"
                        },
                        new
                        {
                            StudentId = 26,
                            Email = "kasper.vandenhaute@ulazarus.be",
                            FacultyId = 2,
                            FirstName = "Kasper",
                            LastName = "Vandenhaute",
                            ScheduleId = 1,
                            UserId = "Student26"
                        },
                        new
                        {
                            StudentId = 27,
                            Email = "lana.cools@ulazarus.be",
                            FacultyId = 3,
                            FirstName = "Lana",
                            LastName = "Cools",
                            ScheduleId = 2,
                            UserId = "Student27"
                        },
                        new
                        {
                            StudentId = 28,
                            Email = "maarten.deridder@ulazarus.be",
                            FacultyId = 1,
                            FirstName = "Maarten",
                            LastName = "De Ridder",
                            ScheduleId = 3,
                            UserId = "Student28"
                        },
                        new
                        {
                            StudentId = 29,
                            Email = "nina.vandevelde@ulazarus.be",
                            FacultyId = 2,
                            FirstName = "Nina",
                            LastName = "Van de Velde",
                            ScheduleId = 2,
                            UserId = "Student29"
                        },
                        new
                        {
                            StudentId = 30,
                            Email = "oona.segers@ulazarus.be",
                            FacultyId = 3,
                            FirstName = "Oona",
                            LastName = "Segers",
                            ScheduleId = 3,
                            UserId = "Student30"
                        },
                        new
                        {
                            StudentId = 31,
                            Email = "pieter.diels@ulazarus.be",
                            FacultyId = 1,
                            FirstName = "Pieter",
                            LastName = "Diels",
                            ScheduleId = 1,
                            UserId = "Student31"
                        },
                        new
                        {
                            StudentId = 32,
                            Email = "quincy.helsen@ulazarus.be",
                            FacultyId = 2,
                            FirstName = "Quincy",
                            LastName = "Helsen",
                            ScheduleId = 2,
                            UserId = "Student32"
                        },
                        new
                        {
                            StudentId = 33,
                            Email = "roos.depooter@ulazarus.be",
                            FacultyId = 3,
                            FirstName = "Roos",
                            LastName = "De Pooter",
                            ScheduleId = 3,
                            UserId = "Student33"
                        },
                        new
                        {
                            StudentId = 34,
                            Email = "simon.d'hoore@ulazarus.be",
                            FacultyId = 1,
                            FirstName = "Simon",
                            LastName = "D'Hoore",
                            ScheduleId = 2,
                            UserId = "Student34"
                        },
                        new
                        {
                            StudentId = 35,
                            Email = "tine.vermassen@ulazarus.be",
                            FacultyId = 2,
                            FirstName = "Tine",
                            LastName = "Vermassen",
                            ScheduleId = 1,
                            UserId = "Student35"
                        },
                        new
                        {
                            StudentId = 36,
                            Email = "urs.dekoninck@ulazarus.be",
                            FacultyId = 3,
                            FirstName = "Urs",
                            LastName = "De Koninck",
                            ScheduleId = 1,
                            UserId = "Student36"
                        },
                        new
                        {
                            StudentId = 37,
                            Email = "veerle.dewaele@ulazarus.be",
                            FacultyId = 1,
                            FirstName = "Veerle",
                            LastName = "Dewaele",
                            ScheduleId = 2,
                            UserId = "Student37"
                        },
                        new
                        {
                            StudentId = 38,
                            Email = "ward.claes@ulazarus.be",
                            FacultyId = 2,
                            FirstName = "Ward",
                            LastName = "Claes",
                            ScheduleId = 3,
                            UserId = "Student38"
                        },
                        new
                        {
                            StudentId = 39,
                            Email = "xenia.vanderhaegen@ulazarus.be",
                            FacultyId = 3,
                            FirstName = "Xenia",
                            LastName = "Vanderhaegen",
                            ScheduleId = 2,
                            UserId = "Student39"
                        },
                        new
                        {
                            StudentId = 40,
                            Email = "yorben.dewinter@ulazarus.be",
                            FacultyId = 1,
                            FirstName = "Yorben",
                            LastName = "De Winter",
                            ScheduleId = 1,
                            UserId = "Student40"
                        },
                        new
                        {
                            StudentId = 41,
                            Email = "zoë.meeus@ulazarus.be",
                            FacultyId = 2,
                            FirstName = "Zoë",
                            LastName = "Meeus",
                            ScheduleId = 1,
                            UserId = "Student41"
                        },
                        new
                        {
                            StudentId = 42,
                            Email = "annelies.demuynck@ulazarus.be",
                            FacultyId = 3,
                            FirstName = "Annelies",
                            LastName = "Demuynck",
                            ScheduleId = 2,
                            UserId = "Student42"
                        },
                        new
                        {
                            StudentId = 43,
                            Email = "bert.vrancken@ulazarus.be",
                            FacultyId = 1,
                            FirstName = "Bert",
                            LastName = "Vrancken",
                            ScheduleId = 3,
                            UserId = "Student43"
                        },
                        new
                        {
                            StudentId = 44,
                            Email = "charlotte.moons@ulazarus.be",
                            FacultyId = 2,
                            FirstName = "Charlotte",
                            LastName = "Moons",
                            ScheduleId = 2,
                            UserId = "Student44"
                        },
                        new
                        {
                            StudentId = 45,
                            Email = "dylan.spillebeen@ulazarus.be",
                            FacultyId = 3,
                            FirstName = "Dylan",
                            LastName = "Spillebeen",
                            ScheduleId = 3,
                            UserId = "Student45"
                        },
                        new
                        {
                            StudentId = 46,
                            Email = "eline.vermeersch@ulazarus.be",
                            FacultyId = 1,
                            FirstName = "Eline",
                            LastName = "Vermeersch",
                            ScheduleId = 1,
                            UserId = "Student46"
                        },
                        new
                        {
                            StudentId = 47,
                            Email = "frederik.vanlooy@ulazarus.be",
                            FacultyId = 2,
                            FirstName = "Frederik",
                            LastName = "Van Looy",
                            ScheduleId = 2,
                            UserId = "Student47"
                        },
                        new
                        {
                            StudentId = 48,
                            Email = "gwen.vandamme@ulazarus.be",
                            FacultyId = 3,
                            FirstName = "Gwen",
                            LastName = "Van Damme",
                            ScheduleId = 3,
                            UserId = "Student48"
                        },
                        new
                        {
                            StudentId = 49,
                            Email = "hugo.dejonge@ulazarus.be",
                            FacultyId = 1,
                            FirstName = "Hugo",
                            LastName = "De Jonge",
                            ScheduleId = 1,
                            UserId = "Student49"
                        },
                        new
                        {
                            StudentId = 50,
                            Email = "isa.vandewalle@ulazarus.be",
                            FacultyId = 2,
                            FirstName = "Isa",
                            LastName = "Vandewalle",
                            ScheduleId = 1,
                            UserId = "Student50"
                        });
                });

            modelBuilder.Entity("ULazarusData.Models.Teacher", b =>
                {
                    b.Property<int>("TeacherId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TeacherId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FacultyId")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("TeacherId");

                    b.HasIndex("FacultyId");

                    b.HasIndex("UserId");

                    b.ToTable("Teachers");

                    b.HasData(
                        new
                        {
                            TeacherId = 1,
                            Email = "alice.jansen@ulazarus.be",
                            FacultyId = 1,
                            FirstName = "Alice",
                            LastName = "Jansen",
                            UserId = "Teacher1"
                        },
                        new
                        {
                            TeacherId = 2,
                            Email = "bart.peeters@ulazarus.be",
                            FacultyId = 2,
                            FirstName = "Bart",
                            LastName = "Peeters",
                            UserId = "Teacher2"
                        },
                        new
                        {
                            TeacherId = 3,
                            Email = "clara.devos@ulazarus.be",
                            FacultyId = 3,
                            FirstName = "Clara",
                            LastName = "De Vos",
                            UserId = "Teacher3"
                        },
                        new
                        {
                            TeacherId = 4,
                            Email = "daan.vermeulen@ulazarus.be",
                            FacultyId = 1,
                            FirstName = "Daan",
                            LastName = "Vermeulen",
                            UserId = "Teacher4"
                        },
                        new
                        {
                            TeacherId = 5,
                            Email = "eva.maes@ulazarus.be",
                            FacultyId = 2,
                            FirstName = "Eva",
                            LastName = "Maes",
                            UserId = "Teacher5"
                        },
                        new
                        {
                            TeacherId = 6,
                            Email = "frank.vdb@ulazarus.be",
                            FacultyId = 3,
                            FirstName = "Frank",
                            LastName = "Vandenberghe",
                            UserId = "Teacher6"
                        },
                        new
                        {
                            TeacherId = 7,
                            Email = "greet.declerck@ulazarus.be",
                            FacultyId = 1,
                            FirstName = "Greet",
                            LastName = "Declerck",
                            UserId = "Teacher7"
                        },
                        new
                        {
                            TeacherId = 8,
                            Email = "hans.lenaerts@ulazarus.be",
                            FacultyId = 2,
                            FirstName = "Hans",
                            LastName = "Lenaerts",
                            UserId = "Teacher8"
                        },
                        new
                        {
                            TeacherId = 9,
                            Email = "ilse.vandenheuvel@ulazarus.be",
                            FacultyId = 3,
                            FirstName = "Ilse",
                            LastName = "Vandenheuvel",
                            UserId = "Teacher9"
                        },
                        new
                        {
                            TeacherId = 10,
                            Email = "jan.desmet@ulazarus.be",
                            FacultyId = 1,
                            FirstName = "Jan",
                            LastName = "De Smet",
                            UserId = "Teacher10"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("ULazarusData.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("ULazarusData.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ULazarusData.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("ULazarusData.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ULazarusData.Models.Course", b =>
                {
                    b.HasOne("ULazarusData.Models.Faculty", "Faculty")
                        .WithMany("Courses")
                        .HasForeignKey("FacultyId");

                    b.HasOne("ULazarusData.Models.Sector", "Sector")
                        .WithMany("Courses")
                        .HasForeignKey("SectorId");

                    b.HasOne("ULazarusData.Models.Teacher", "Teacher")
                        .WithMany("Courses")
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Faculty");

                    b.Navigation("Sector");

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("ULazarusData.Models.CourseResult", b =>
                {
                    b.HasOne("ULazarusData.Models.Course", "Course")
                        .WithMany("CourseResults")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ULazarusData.Models.Student", "Student")
                        .WithMany("CourseResults")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("ULazarusData.Models.Schedule", b =>
                {
                    b.HasOne("ULazarusData.Models.Course", "Course")
                        .WithMany("Schedules")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");
                });

            modelBuilder.Entity("ULazarusData.Models.Student", b =>
                {
                    b.HasOne("ULazarusData.Models.Faculty", "Faculty")
                        .WithMany("Students")
                        .HasForeignKey("FacultyId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("ULazarusData.Models.Schedule", "Schedule")
                        .WithMany()
                        .HasForeignKey("ScheduleId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("ULazarusData.Models.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("Faculty");

                    b.Navigation("Schedule");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ULazarusData.Models.Teacher", b =>
                {
                    b.HasOne("ULazarusData.Models.Faculty", "Faculty")
                        .WithMany("Teachers")
                        .HasForeignKey("FacultyId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("ULazarusData.Models.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("Faculty");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ULazarusData.Models.Course", b =>
                {
                    b.Navigation("CourseResults");

                    b.Navigation("Schedules");
                });

            modelBuilder.Entity("ULazarusData.Models.Faculty", b =>
                {
                    b.Navigation("Courses");

                    b.Navigation("Students");

                    b.Navigation("Teachers");
                });

            modelBuilder.Entity("ULazarusData.Models.Sector", b =>
                {
                    b.Navigation("Courses");
                });

            modelBuilder.Entity("ULazarusData.Models.Student", b =>
                {
                    b.Navigation("CourseResults");
                });

            modelBuilder.Entity("ULazarusData.Models.Teacher", b =>
                {
                    b.Navigation("Courses");
                });
#pragma warning restore 612, 618
        }
    }
}
